@model IEnumerable<FrontEnd.Models.Author>

@{
    ViewBag.Title = "Index";
}

@functions {
    public string GetTypeOfOrderName()
    {
        if (String.IsNullOrEmpty(ViewBag.SortName))
        {
            return "ASC";
        }

        if (ViewBag.SortName == "DESC")
        {
            return "ASC";
        }

        if (ViewBag.SortName == "ASC")
        {
            return "DESC";
        }

        return "";
    }
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortName = @GetTypeOfOrderName() })
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Gender)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.State)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.IsAlive)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @GenericFunction.ConvertGenderToString(item.Gender)
            </td>
            <td>
                @GenericFunction.GetState(item.State)
            </td>
            <td>
                @GenericFunction.GetIsAlive(item.IsAlive)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ID }) |
                @Html.ActionLink("Details", "Details", new { id = item.ID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ID })
            </td>
        </tr>
    }

</table>
